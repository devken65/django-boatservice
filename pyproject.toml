[project]
name = "django-project"
version = "0.1.0"
description = ""
authors = [
    {name = "Your Name", email = "you@example.com"}
]
license = {text = "MIT"}
readme = "README.md"
# ⬇️ caret(^) 대신 PEP440 규칙 사용
requires-python = ">=3.12,<3.13"
dependencies = [
    "django (>=5.2.6,<6.0.0)",
    "mysqlclient (>=2.2.7,<3.0.0)",
    "django-environ (>=0.12.0,<0.13.0)",
    "dj-database-url (>=3.0.1,<4.0.0)",
    "djangorestframework (>=3.16.1,<4.0.0)",
    "pillow (>=11.3.0,<12.0.0)"
]

[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"

# ✅ dev 의존성(ruff)은 Poetry 그룹에 두는 방식 유지
[tool.poetry.group.dev.dependencies]
ruff = "^0.13.2"

# ✅ ruff 설정 추가
[tool.ruff]
target-version = "py312"
line-length = 100
extend-exclude = ["migrations", ".venv", "venv"]

[tool.ruff.format]
# skip-magic-trailing-comma = true

[tool.ruff.lint]
extend-select = [
  "E",   # pycodestyle
  "F",   # pyflakes
  "W",   # pycodestyle warnings
  "B",   # flake8-bugbear
  "I",   # isort(임포트 정리)
  "UP",  # pyupgrade
  "DJ",  # flake8-django
]
extend-ignore = [
  "E203", # 슬라이스 공백 규칙(포매터와 충돌 방지)
  "ISC001",
  "COM812",
]

[tool.ruff.lint.isort]
# 내 프로젝트/앱 패키지들(예시: Django 앱 모듈명들)
split-on-trailing-comma = true
known-first-party = ["config", "core", "accounts", "orders", "myapp"]
combine-as-imports = true

[tool.ruff.lint.per-file-ignores]
"**/migrations/*.py" = ["E501", "F401", "DJ001"]

[tool.poetry]
package-mode = false